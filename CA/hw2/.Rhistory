# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
model<-r.lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
model<-m.lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
m.lrm1<- lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
summary(m.lrm1)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
m.lrm1
# 算VIF (variance inflation factor)：看變項間的相關，通常是「希望」小於5。
rms::vif(m.lrm)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
options(show.signif.stars=TRUE)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
m.lrm1
# 算VIF (variance inflation factor)：看變項間的相關，通常是「希望」小於5。
rms::vif(m.lrm)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
options(show.signif.stars=TRUE)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
summary(m.lrm1)
View(Nana_LingFns_ctx_predict)
library(readr)
BE_Test_ctx0_2 <- read_csv("Desktop/Github/casa/models/eval_classifier/BE_Test_ctx0.2.csv")
View(BE_Test_ctx0_2)
library(readr)
BE_Test_eval0_2 <- read_csv("Desktop/Github/casa/models/eval_classifier/BE_Test_eval0.2.csv")
View(BE_Test_eval0_2)
library(readr)
BEC_Test_ctx0_2 <- read_csv("Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv")
View(BEC_Test_ctx0_2)
library(readr)
BEC_Test_eval0_2 <- read_csv("Desktop/Github/casa/models/eval_classifier/BEC_Test_eval0.2.csv")
View(BEC_Test_eval0_2)
View(BE_Test_ctx0_2)
View(BE_Test_ctx0_2)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
options(show.signif.stars=TRUE)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
dd <- datadist(x)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
options(show.signif.stars=TRUE)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
dd <- datadist("BEC_Test_ctx0_2")
options(datadist=dd)
summary(m.lrm1)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
options(show.signif.stars=TRUE)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
dd <- datadist(causation)
options(datadist=dd)
summary(m.lrm1)
# 算VIF (variance inflation factor)：看變項間的相關，通常是「希望」小於5。
rms::vif(m.lrm)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
options(show.signif.stars=TRUE)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
# dd <- datadist(causation)
# options(datadist=dd)
# summary(m.lrm1)
m.lrm1
# 算VIF (variance inflation factor)：看變項間的相關，通常是「希望」小於5。
rms::vif(m.lrm)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
options(show.signif.stars=TRUE)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
# dd <- datadist(causation)
# options(datadist=dd)
# summary(m.lrm1)
m.lrm1
# 算VIF (variance inflation factor)：看變項間的相關，通常是「希望」小於5。
rms::vif(m.lrm1)
rms::summary(m.lrm1)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BEC_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
options(show.signif.stars=TRUE)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
# dd <- datadist(causation)
# options(datadist=dd)
# summary(m.lrm1)
m.lrm1
# 算VIF (variance inflation factor)：看變項間的相關，通常是「希望」小於5。
rms::vif(m.lrm1)
library(readr)
library(rms)
# read_csv是readr的函數之一，它把causation_all.csv讀進來之後，會傳回data.frame/tibble給causation
# 這個causation就是之後分析用的所有資料來源
causation <- read_csv('/Users/yangqingwen/Desktop/Github/casa/models/eval_classifier/BE_Test_ctx0.2.csv')
# table是描述統計用，單純試看看不同變項之間的contingency
# causation$ResuPred 意思是 causation這個data.frame的ResuPred變項（或欄位），
# table(causation$ResuPred, causation$Varieties)
# 所有的類別變項（或二元變項）在R裡面都需要另外標成`factor`，所以以下幾行是把幾個類別變項都factor過一次
# causation$IsCorrect <- factor(causation$IsCorrect)
# causation$IsMultiEnts <- factor(causation$IsMultiEnts)
# causation$IsMultiVAs <- factor(causation$IsMultiVAs)
# causation$IsMultiSym <- factor(causation$IsMultiSym)
# 這邊就是真的跑統計模型的地方，用的是rms裡的lrm函數。
# lrm第一個argument是一個 `formula`，語法是 y ~ x1 + x2 + x3...
# `data` 是這個model要分析哪一筆資料，在這裡就是那個`causation`
# 後面的 `x` 和 `y` 應該只是控制回傳訊息的選項，目前就先放著就好。
# logistic regression model
# lrm(IsCorrect ~ IsMultiEnts + IsMultiVAs+IsMultiSym, data = causation,
#              x = T, y = T)
options(show.signif.stars=TRUE)
m.lrm1<-lrm(IsCorrect ~ probs, data = causation,
x = T, y = T)
# dd <- datadist(causation)
# options(datadist=dd)
# summary(m.lrm1)
m.lrm1
# 算VIF (variance inflation factor)：看變項間的相關，通常是「希望」小於5。
rms::vif(m.lrm1)
# https://www.rdocumentation.org/packages/agridat/versions/1.18/topics/minnesota.barley.yield
pacman::p_load(agridat, lattice)
library(agridat)
library(lattice)
year
yields <- minnesota.barley.yield[minnesota.barley.yield$year == 1931 | minnesota.barley.yield$year == 1932,]
nrow(yields) # 141
attach(yields) # yield, gen(variety), year, site
library(lattice)
yields <- minnesota.barley.yield[minnesota.barley.yield$year == 1931 | minnesota.barley.yield$year == 1932,]
nrow(yields) # 141
attach(yields) # yield, gen(variety), year, site
xyplot(gen~yield | site, yields,groups=factor(year,labels=c(1931, 1932)),
panel=function(x, y, subscripts){
panel.xyplot(x, y, pch=16)
panel.xyplot(x, y, pch=3)
}, as.table=T)
# library
library(ggplot2)
# create a dataset
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(specie,condition,value)
# Grouped
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="dodge", stat="identity")
data
#barchart2
ANC <- c(57.40, 62.15)
DA <- c(20.77, 22.23)
EFF <- c(10.80, 6.35)
IFP <- c(3.38, 2.40)
FF_plius <- c(2.38, 6.90)
Others <- c(5.17, 5.97)
results
results <- data.frame(ANC, DA, EFF, IFP, FF_plius, Others)
results
T = as.matrix(results)
t(T)
library(tidyverse)
library(dplyr)
library(dplyr)
t(T).as.data.frame
T_df = as.data.frame(t(T))
T_df
results
ggplot(results, aes(y=value, x=ANC)) +
geom_bar(position="dodge", stat="identity")
df <- read.table(text = "       Input Rtime Rcost Rsolutions  Btime Bcost
1   12-proc.     1    36     614425     40    36
2   15-proc.     1    51     534037     50    51
3    18-proc     5    62    1843820     66    66
4    20-proc     4    68    1645581 104400    73
5 20-proc(l)     4    64    1658509  14400    65
6    21-proc    10    78    3923623 453600    82",header = TRUE,sep = "")
dfm <- melt(df[,c('Input','Rtime','Btime')],id.vars = 1)
dfm
df <- read.table(text = "       Input Rtime Rcost Rsolutions  Btime Bcost
1   12-proc.     1    36     614425     40    36
2   15-proc.     1    51     534037     50    51
3    18-proc     5    62    1843820     66    66
4    20-proc     4    68    1645581 104400    73
5 20-proc(l)     4    64    1658509  14400    65
6    21-proc    10    78    3923623 453600    82",header = TRUE,sep = "")
dfm <- melt(df[,c('Input','Rtime','Btime')],id.vars = 1)
library(reshape2)
dfm <- melt(df[,c('Input','Rtime','Btime')],id.vars = 1)
dfm
ggplot(df, aes(y=value, x=V1)) +
geom_bar(position="dodge", stat="identity")
ggplot(df, aes(y=value, x=2014)) +
geom_bar(position="dodge", stat="identity")
T_df = as.data.frame(t(T))
# Grouped
T_df
# Grouped
T_df_m <- melt[,c(V1, V2)]
# Grouped
T_df_m <- melt(T_df[,c(V1, V2)])
# Grouped
T_df_m <- melt(T_df[,c(T_df$V1, T_df$V2)])
# Grouped
T_df_m <- melt(T_df, id=c("V1","V2")))
# Grouped
T_df_m <- melt(T_df, id=c("V1","V2"))
T_df_m
# Grouped
T_df_m <- melt(T_df, id=c("V1"))
T_df_m
T_dfm = melt(T_df,var='color')
T_dfm
ggplot(df, aes(y=value, x=color)) +
geom_bar(position="dodge", stat="identity")
ggplot(T_dfm, aes(y=value, x=color)) +
geom_bar(position="dodge", stat="identity")
results
ggplot(results, aes(y=value, x=color)) +
geom_bar(position="dodge", stat="identity")
T_dfm
results <- melt(results,var='color')
results
results
results <- data.frame(ANC, DA, EFF, IFP, FF_plius, Others)
results
results$year <- c(2019, 2014)
results
results_re <- melt(results,var='year')
results_re <- melt(results,id = c('year'))
ggplot(results_re, aes()) +
geom_bar(position="dodge", stat="identity")
results_re
ggplot(results_re, aes(x = results_re$year, y = value, fill= variable)) +
geom_bar(position="dodge", stat="identity")
ggplot(results_re, aes(x = year, y = value, fill= variable)) +
geom_bar(position="dodge", stat="identity")
ggplot(results_re, aes(x = variable, y = value, fill= year)) +
geom_bar(position="dodge", stat="identity")
ggplot(results_re, aes(x = variable, y = year)) +
geom_bar(position="dodge", stat="identity")
ggplot(results_re, aes(x = variable,fill= year)) +
geom_bar(position="dodge", stat="identity")
ggplot(results_re, aes(x = variable, y= year, fill= year)) +
geom_bar(position="dodge", stat="identity")
test  <- data.frame(person=c("A", "B", "C", "D", "E"),
value1=c(100,150,120,80,150),
value2=c(25,30,45,30,30) ,
value3=c(100,120,150,150,200))
melted <- melt(test, "person")
melted$cat <- ''
melted[melted$variable == 'value1',]$cat <- "first"
melted[melted$variable != 'value1',]$cat <- "second"
melted
ggplot(results_re, aes(x = variable, y= year)) +
geom_bar(position="dodge", stat="identity")
ggplot(results_re, aes(x = variable, y= year, fill = value)) +
geom_bar(position="dodge", stat="identity")
ggplot(results_re, aes(x = year, y= year, fill = variable)) +
geom_bar(position="dodge", stat="identity")
ggplot(results_re, aes(x = year, y= value, fill = variable)) +
geom_bar(position="dodge", stat="identity")
ggplot(results_re, aes(x = year, y= value, fill = variable)) +
geom_bar(position="dodge", stat="identity") + facet_grid(~ year)
ggplot(results_re, aes(x = year, y= value, fill = variable)) +
geom_bar(position="dodge", stat="identity") + facet_grid(~ variable)
results_re$cat <- ''
results_re[results_re$year == 2014,]$cat <- "2014"
results_re[results_re$year ==2019,]$cat <- "2019"
ggplot(results_re, aes(x = cat, y= value, fill = variable)) +
geom_bar(position="dodge", stat="identity") + facet_grid(~ variable)
results_re$cat <- ''
pacman::p_load(dplyr,
ggplot2, reshape2)
results$year <- c(2019, 2014)
year <- c("2019","2014")
results_re <- melt(results,id = c('year'))
results_re
#
results_re$cat <- ''
results_re[results_re$year == 2014,]$cat <- "2014"
results_re[results_re$year ==2019,]$cat <- "2019"
results_re
results$year <- c("2019", "2014")
year <- c("2019","2014")
results_re <- melt(results,id = c('year'))
results_re
ggplot(results_re, aes(x = cat, y= value, fill = variable)) +
geom_bar(position="dodge", stat="identity") + facet_grid(~ variable)
results_re
#
results_re$cat <- ''
ggplot(results_re, aes(x = year, y= value, fill = variable)) +
geom_bar(position="dodge", stat="identity") + facet_grid(~ variable)
